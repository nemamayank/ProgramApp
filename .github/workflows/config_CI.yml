name: Android ProgramApp CI

# Controls when the workflow will run
on:
  push:
    branches:
      - master  # Trigger the workflow on pushing to the master branch
  pull_request:
    branches:
      - master  # Trigger the workflow on pull requests targeting the master branch
  workflow_dispatch:  # Allows manual trigger of the workflow from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for the job

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK (Java 11 is required for Android builds)
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Use JDK 11
          distribution: 'adoptopenjdk'

      # Step 3: Cache Gradle dependencies to speed up builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Set up Android SDK (to compile the Android project)
      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: '35'  # Specify the SDK version (e.g., API 30)
          build-tools-version: '30.0.3'  # Specify the build tools version

      # Step 5: Run a basic test script (echo test message)
      - name: Run a one-line script
        run: echo "Hello, world!"

      # Step 6: Build the APK
      - name: Build the APK
        run: ./gradlew assembleRelease  # Build the release APK using Gradle

      # Step 7: Archive the APK as an artifact
      - name: Archive release APK as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: app/build/outputs/apk/release/app-release.apk  # Path to the APK file

      # Step 8: (Optional) Run a multi-line script for additional tasks (e.g., tests, notifications)
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
